<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.msk.stock.logic.ISO151430Logic">

	<sql id="whereCondition">
		WHERE   DEL_FLG=0

		<if test="slCode!=null and slCode!=''">
			and SL_CODE=#{slCode}
		</if>
		<if test="slName!=null and slName!=''">
			and SL_NAME like '%${slName}%'
		</if>
		<if test="lgcsCode!=null and lgcsCode!=''">
			and LGCS_CODE like  '${lgcsCode}%'
		</if>

		<if test="lgcsName!=null and lgcsName!=''">
			and LGCS_NAME like  '${lgcsName}%'
		</if>

		<if test="warehouseCode!=null and warehouseCode!=''">
			and WAREHOUSE_CODE like  '${warehouseCode}%'
		</if>

		<if test="warehouseName!=null and warehouseName!=''">
			and  WAREHOUSE_NAME like  '${warehouseName}%'
		</if>

		<if test="stockQty!=null ">
			and  STOCK_QTY >    #{stockQty}
		</if>

		<if test="enabledStockQty!=null ">
			and   ENABLED_STOCK_QTY  >  #{enabledStockQty}
		</if>

		<if test="stockType!=null and stockType!=''">
			and  STOCK_TYPE=#{stockType}
		</if>

		<if test="pdCode!=null and pdCode!=''">
			and Pd_Code  like '${pdCode}%'
		</if>

		<if test="classesCode!=null and classesCode!=''">
			and Pd_Code like  '${classesCode}%'
		</if>

		<if test="breedCode!=null and breedCode!=''">
			and Pd_Code like '___${breedCode}%'
		</if>
		<if test="pdName!=null and pdName!=''">
			and   PD_NAME like '%${pdName}%'
		</if>
		<if test="salePlatform!=null and salePlatform!=''">
			and   SALE_PLATFORM  =#{salePlatform}
		</if>

		<if test="slCodeList!=null and slCodeList.size()>0">
			and  SL_CODE IN
			<foreach collection="slCodeList" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>

	</sql>


<select id="com.msk.stock.logic.ISO151430Logic.findSLStock" resultType="com.msk.stock.bean.Stock" parameterType="com.msk.stock.bean.StockRsParam">

	   SELECT
	   STOCK_ID  as  stockId,
	   SL_CODE  as slCode,
	   IFNULL(STOCK_TYPE,'')  as stockType,
	   IFNULL(CLASSES_CODE,'')  AS classesCode,
	   IFNULL(CLASSES_NAME,'') AS classesName,
	   IFNULL(BREED_CODE,'') AS breedCode,
	   IFNULL(BREED_NAME,'')  AS breedName,
	   IFNULL(FEATURE_CODE,'')  AS featureCode,
	   IFNULL(FEATURE_NAME,'')  AS featureName,
	   IFNULL(NORMS_CODE,'') AS normsCode,
	   IFNULL(NORMS_NAME,'') AS normsName,
	   PACKING_VOLUME AS packingVolume,
	   IFNULL(PD_LEVEL,'')  AS pdLevel,
	   IFNULL(SL_NAME,'')   as  slName,
	   IFNULL(LGCS_CODE,'')  as lgcsCode,
	   IFNULL(LGCS_NAME,'未知区域')as lgcsName,
	   IFNULL(WAREHOUSE_CODE,'') as warehouseCode,
	   IFNULL(WAREHOUSE_NAME,'') AS warehouseName,
	   IFNULL(SL_CODE,'') AS slCode,
	   IFNULL(concat(CLASSES_NAME,BREED_NAME), '未知产品') AS constitutedPdName,
	  ( CASE SALE_PLATFORM
	   WHEN 1 THEN '神农客'
       WHEN 2 THEN '美侍客'
	   ELSE '' END
	 )
	   as salePlatform,
	   IFNULL(UNIT,'')       as unit,
	   PD_CODE    as pdCode,
	   PD_NAME     as pdName,
	   STOCK_QTY as stockQty,
	    WEIGHT AS weight,
	    VOLUME AS volume,
	998  AS enabledStockQty
	   FROM  so_stock_sl sl
	<include refid="whereCondition" />
	<if test="orderBy!=null and orderBy!=''">
		order by ${orderBy}
	</if>

</select>



	<select id="getPageCount" resultType="Integer" parameterType="BasePageParam">
		SELECT  count(1)
		 FROM  so_stock_sl sl
		<include refid="whereCondition" />
	</select>


	<update id="com.msk.stock.logic.ISO151430Logic.updateSLSTOCK" parameterType="com.msk.stock.bean.StockRsParam">
		UPDATE so_stock_sl
		SET STOCK_QTY = #{stockQty}
		WHERE STOCK_ID = #{stockId}
	</update>




	<!--关联 so_stock_occ_sl-->
	<select id="countSlStocked" parameterType="com.msk.stock.bean.Stock" resultType="int">
		SELECT count(1)
		FROM so_stock_sl a
		INNER JOIN so_stock_occ_sl b
		ON a.LGCS_CODE = b.LGCS_CODE
		AND a.SL_CODE = b.SL_CODE
		AND a.PD_CODE = b.PD_CODE
		WHERE (a.STOCK_QTY - b.OCCUPY_QTY) >= #{stockNum}
		<include refid="ConditionSl"/>
	</select>




	<sql id="ConditionSl">
		AND a.LGCS_CODE = LEFT(#{lgcsCode}, 2)
		AND a.SL_CODE = #{slCode}
		AND a.PD_CODE = #{pdCode}
	</sql>




	<update id="frozenStockSl" parameterType="BaseParam">
		update so_stock_occ_sl
		set OCCUPY_QTY = OCCUPY_QTY + #{stockNum}
		<include refid="whereConditionSl"/>
	</update>



	<update id="cancelFrozenStockSl" parameterType="BaseParam">
		update so_stock_occ_sl
		set OCCUPY_QTY = OCCUPY_QTY - #{stockNum}
		<include refid="whereConditionOcc"/>
	</update>




	<!--检查卖家是否有库存-->
	<select id="countSoStockSl" parameterType="BaseParam" resultType="int">
		SELECT count(1)
		FROM so_stock_sl
		<include refid="whereConditionSl"/>
	</select>



	<update id ="updateSoStockSl" parameterType="BaseParam">
		UPDATE   so_stock_sl
		SET   so_stock_sl.STOCK_QTY = so_stock_sl.STOCK_QTY + #{stockNum},
		so_stock_sl.CRT_ID = #{crtId},
		so_stock_sl.CRT_TIME = sysdate(),
		so_stock_sl.UPD_ID = #{updId},
		so_stock_sl.UPD_TIME = sysdate(),
		so_stock_sl.ACT_ID = #{actId},
		so_stock_sl.ACT_TIME = sysdate()
		WHERE   so_stock_sl.LGCS_CODE = #{lgcsCode}
		AND   so_stock_sl.WAREHOUSE_CODE = #{warehouseCode}
		AND   so_stock_sl.STOCK_TYPE = #{stockType}
		AND   so_stock_sl.SL_CODE = #{slCode}
		AND   so_stock_sl.PD_CODE = #{pdCode}
	</update>

	<insert id ="insertSoStockRecord" parameterType="BaseParam" >
		INSERT INTO   so_stock_record(
		so_stock_record.STOCK_ID,
		so_stock_record.FLOW_ID,
		so_stock_record.PD_CODE,
		so_stock_record.SUPPLIER_CODE,
		so_stock_record.SL_CODE,
		so_stock_record.QTY,
		so_stock_record.TYPE,
		so_stock_record.DEL_FLG,
		so_stock_record.CRT_ID,
		so_stock_record.CRT_TIME,
		so_stock_record.UPD_ID,
		so_stock_record.UPD_TIME,
		so_stock_record.ACT_ID,
		so_stock_record.ACT_TIME,
		so_stock_record.VER)
		VALUES  (#{stockId},
		#{flowId},
		#{pdCode},
		#{supplierCode},
		#{slCode},
		abs(#{stockNum}),
		#{changeType},
		0,
		#{crtId},
		sysdate(),
		#{updId},
		sysdate(),
		#{actId},
		sysdate(),
		1)
	</insert>


	<insert id ="insertSoStockSl" parameterType="BaseParam">
		INSERT INTO so_stock_sl(
		so_stock_sl.STOCK_ID,
		so_stock_sl.sale_platform,
		so_stock_sl.LGCS_CODE,
		so_stock_sl.LGCS_NAME,
		so_stock_sl.WAREHOUSE_CODE,
		so_stock_sl.WAREHOUSE_NAME,
		so_stock_sl.STOCK_TYPE,
		so_stock_sl.SL_CODE,
		so_stock_sl.SL_NAME,
		so_stock_sl.CLASSES_CODE,
		so_stock_sl.CLASSES_NAME,
		so_stock_sl.BREED_CODE,
		so_stock_sl.BREED_NAME,
		so_stock_sl.FEATURE_CODE,
		so_stock_sl.FEATURE_NAME,
		so_stock_sl.NORMS_CODE,
		so_stock_sl.NORMS_NAME,
		so_stock_sl.PD_CODE,
		so_stock_sl.PD_NAME,
		so_stock_sl.PD_LEVEL,
		so_stock_sl.UNIT,
		so_stock_sl.PACKING_VOLUME,
		so_stock_sl.WEIGHT,
		so_stock_sl.VOLUME,
		so_stock_sl.STOCK_QTY,
		so_stock_sl.DEL_FLG,
		so_stock_sl.CRT_ID,
		so_stock_sl.CRT_TIME,
		so_stock_sl.UPD_ID,
		so_stock_sl.UPD_TIME,
		so_stock_sl.ACT_ID,
		so_stock_sl.ACT_TIME,
		so_stock_sl.VER)
		VALUES (#{stockId},
		#{supplyPlatform},
		#{lgcsCode},
		#{lgcsName},
		#{warehouseCode},
		#{warehouseName},
		#{stockType},
		#{slCode},
		#{slName},
		#{classesCode},
		#{classesName},
		#{breedCode},
		#{breedName},
		#{featureCode},
		#{featureName},
		#{normsCode},
		#{normsName},
		#{pdCode},
		#{pdName},
		#{pdLevel},
		#{unit},
		#{packingVolume},
		#{weight},
		#{volume},
		#{stockNum},
		0,
		#{crtId},
		sysdate(),
		#{updId},
		sysdate(),
		#{actId},
		sysdate(),
		1)
	</insert>

	<sql id="whereConditionSl">
		<where>
			<if test="stockNum != null">
			AND STOCK_QTY > #{stockNum}
		</if>
			<if test="pdCode != null and pdCode != ''">
				AND PD_CODE = #{pdCode}
			</if>
			<if test="lgcsCode != null and lgcsCode != ''">
				AND LGCS_CODE = LEFT(#{lgcsCode}, 2)
			</if>
			<if test="slCode != null and slCode != ''">
				AND SL_CODE = #{slCode}
			</if>
			<if test="supplyPlatform != null">
				AND SALE_PLATFORM = #{supplyPlatform}
			</if>
		</where>
	</sql>


	<sql id="whereConditionOcc">
		<where>
			<if test="pdCode != null and pdCode != ''">
				AND PD_CODE = #{pdCode}
			</if>
			<if test="lgcsCode != null and lgcsCode != ''">
				AND LGCS_CODE = LEFT(#{lgcsCode}, 2)
			</if>
			<if test="slCode != null and slCode != ''">
				AND SL_CODE = #{slCode}
			</if>
		</where>
	</sql>


	<update id="addStockSlQty" parameterType="BaseParam">
		update so_stock_sl
		set STOCK_QTY = STOCK_QTY + #{stockNum}
		<include refid="whereConditionSl"/>
	</update>


	<insert id="insertStockSl" parameterType="BaseParam">
		INSERT INTO so_stock_sl
		(
		STOCK_ID,
		LGCS_CODE,
		<if test="lgcsName!=null">
			LGCS_NAME,
		</if>
		<if test="warehouseCode!=null">
			WAREHOUSE_CODE,
		</if>
		<if test="warehouseName!=null">
			WAREHOUSE_NAME,
		</if>
		<if test="stockType!=null">
			STOCK_TYPE,
		</if>
		SL_CODE,
		<if test="slName!=null">
			SL_NAME,
		</if>
		<if test="classesCode!=null">
			CLASSES_CODE,
		</if>
		<if test="classesName!=null">
			CLASSES_NAME,
		</if>
		<if test="breedCode!=null">
			BREED_CODE,
		</if>
		<if test="breedName!=null">
			BREED_NAME,
		</if>
		<if test="featureCode!=null">
			FEATURE_CODE,
		</if>
		<if test="featureName!=null">
			FEATURE_NAME,
		</if>
		<if test="normsCode!=null">
			NORMS_CODE,
		</if>
		<if test="normsName!=null">
			NORMS_NAME,
		</if>
		<if test="pdCode!=null">
			PD_CODE,
		</if>
		<if test="pdName!=null">
			PD_NAME,
		</if>
		<if test="pdLevel!=null">
			PD_LEVEL,
		</if>
		<if test="unit!=null">
			UNIT,
		</if>
		<if test="packingVolume!=null">
			PACKING_VOLUME,
		</if>
		<if test="weight!=null">
			WEIGHT,
		</if>
		<if test="volume!=null">
			VOLUME,
		</if>
		STOCK_QTY,
		DEL_FLG,
		CRT_ID,
		CRT_TIME,
		UPD_ID,
		UPD_TIME,
		ACT_ID,
		ACT_TIME,
		VER
		)
		SELECT
		ifnull(MAX(STOCK_ID), 0) + 1,
		#{lgcsCode},
		<if test="lgcsName!=null">
			#{lgcsName},
		</if>
		<if test="warehouseCode!=null">
			#{warehouseCode},
		</if>
		<if test="warehouseName!=null">
			#{warehouseName},
		</if>
		<if test="stockType!=null">
			#{stockType},
		</if>
		#{slCode},
		<if test="slName!=null">
			#{slName},
		</if>
		<if test="classesCode!=null">
			#{classesCode},
		</if>
		<if test="classesName!=null">
			#{classesName},
		</if>
		<if test="breedCode!=null">
			#{breedCode},
		</if>
		<if test="breedName!=null">
			#{breedName},
		</if>
		<if test="featureCode!=null">
			#{featureCode},
		</if>
		<if test="featureName!=null">
			#{featureName},
		</if>
		<if test="normsCode!=null">
			#{normsCode},
		</if>
		<if test="normsName!=null">
			#{normsName},
		</if>
		<if test="pdCode!=null">
			#{pdCode},
		</if>
		<if test="pdName!=null">
			#{pdName},
		</if>
		<if test="pdLevel!=null">
			#{pdLevel},
		</if>
		<if test="unit!=null">
			#{unit},
		</if>
		<if test="packingVolume!=null">
			#{packingVolume},
		</if>
		<if test="weight!=null">
			#{weight},
		</if>
		<if test="volume!=null">
			#{volume},
		</if>
		#{stockNum},
		#{delFlg},
		#{crtId},
		#{crtTime},
		#{updId},
		#{updTime},
		#{actId},
		#{actTime},
		#{ver}
		FROM so_stock_sl
	</insert>



	<select id="getSalerStockNum" resultType="java.math.BigDecimal" parameterType="BaseParam">
		SELECT
		SUM(STOCK_QTY)
		FROM
		so_stock_sl
		WHERE SL_CODE = #{slCode}
		AND PD_CODE = #{pdCode}
	</select>


	<select id="getTodayStockNum" parameterType="BaseParam" resultType="java.math.BigDecimal">
		SELECT SUM(IFNULL(ORDER_QTY,0)-IFNULL(CANCEL_QTY,0)-IFNULL(RETURN_QTY,0)) as num
		FROM so_order_detail
		WHERE PD_CODE =#{filterMap.pdCode}
		AND ORDER_CODE IN
		<foreach collection="filterMap.orderList" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<update id="addStockSuppQty" parameterType="BaseParam">
		update so_stock_supp
		set STOCK_QTY = STOCK_QTY + #{stockNum}
		<include refid="whereConditionSupp"/>
	</update>


	<insert id="insertStockSupp" parameterType="BaseParam">
		INSERT INTO so_stock_supp
		(
		STOCK_ID,
		LGCS_CODE,
		<if test="lgcsName!=null">
			LGCS_NAME,
		</if>
		<if test="warehouseCode!=null">
			WAREHOUSE_CODE,
		</if>
		<if test="warehouseName!=null">
			WAREHOUSE_NAME,
		</if>
		<if test="stockType!=null">
			STOCK_TYPE,
		</if>
		SL_CODE,
		<if test="slName!=null">
			SL_NAME,
		</if>
		SUPPLIER_CODE,
		<if test="supplierName!=null">
			SUPPLIER_NAME,
		</if>
		<if test="classesCode!=null">
			CLASSES_CODE,
		</if>
		<if test="classesName!=null">
			CLASSES_NAME,
		</if>
		<if test="breedCode!=null">
			BREED_CODE,
		</if>
		<if test="breedName!=null">
			BREED_NAME,
		</if>
		<if test="featureCode!=null">
			FEATURE_CODE,
		</if>
		<if test="featureName!=null">
			FEATURE_NAME,
		</if>
		<if test="normsCode!=null">
			NORMS_CODE,
		</if>
		<if test="normsName!=null">
			NORMS_NAME,
		</if>
		<if test="pdCode!=null">
			PD_CODE,
		</if>
		<if test="pdName!=null">
			PD_NAME,
		</if>
		<if test="pdLevel!=null">
			PD_LEVEL,
		</if>
		<if test="unit!=null">
			UNIT,
		</if>
		<if test="packingVolume!=null">
			PACKING_VOLUME,
		</if>
		<if test="weight!=null">
			WEIGHT,
		</if>
		<if test="volume!=null">
			VOLUME,
		</if>
		STOCK_QTY,
		DEL_FLG,
		CRT_ID,
		CRT_TIME,
		UPD_ID,
		UPD_TIME,
		ACT_ID,
		ACT_TIME,
		VER
		)
		SELECT
		ifnull(MAX(STOCK_ID), 0) + 1,
		#{lgcsCode},
		<if test="lgcsName!=null">
			#{lgcsName},
		</if>
		<if test="warehouseCode!=null">
			#{warehouseCode},
		</if>
		<if test="warehouseName!=null">
			#{warehouseName},
		</if>
		<if test="stockType!=null">
			#{stockType},
		</if>
		#{slCode},
		<if test="slName!=null">
			#{slName},
		</if>
		#{supplierCode},
		<if test="supplierName!=null">
			#{supplierName},
		</if>
		<if test="classesCode!=null">
			#{classesCode},
		</if>
		<if test="classesName!=null">
			#{classesName},
		</if>
		<if test="breedCode!=null">
			#{breedCode},
		</if>
		<if test="breedName!=null">
			#{breedName},
		</if>
		<if test="featureCode!=null">
			#{featureCode},
		</if>
		<if test="featureName!=null">
			#{featureName},
		</if>
		<if test="normsCode!=null">
			#{normsCode},
		</if>
		<if test="normsName!=null">
			#{normsName},
		</if>
		<if test="pdCode!=null">
			#{pdCode},
		</if>
		<if test="pdName!=null">
			#{pdName},
		</if>
		<if test="pdLevel!=null">
			#{pdLevel},
		</if>
		<if test="unit!=null">
			#{unit},
		</if>
		<if test="packingVolume!=null">
			#{packingVolume},
		</if>
		<if test="weight!=null">
			#{weight},
		</if>
		<if test="volume!=null">
			#{volume},
		</if>
		#{stockNum},
		#{delFlg},
		#{crtId},
		#{crtTime},
		#{updId},
		#{updTime},
		#{actId},
		#{actTime},
		#{ver}
		FROM so_stock_supp
	</insert>

	<sql id="whereConditionSupp">
		<where>
			<if test="stockNum != null">
				AND STOCK_QTY > #{stockNum}
			</if>
			<if test="lgcsCode != null and lgcsCode != ''">
				AND LGCS_CODE = LEFT(#{lgcsCode}, 2)
			</if>
			<if test="slCode != null and slCode != ''">
				AND SL_CODE = #{slCode}
			</if>
			<if test="supplierCode != null and supplierCode != ''">
				AND SUPPLIER_CODE = #{supplierCode}
			</if>
			<if test="pdCode != null and pdCode != ''">
				AND PD_CODE = #{pdCode}
			</if>
			<if test="supplyPlatform != null">
				AND SUPPLY_PLATFORM = #{supplyPlatform}
			</if>
		</where>
	</sql>

	<insert id="insertStockOccSupp" parameterType="BaseParam">
		INSERT INTO so_stock_occ_supp
		(
		STOCK_ID,
		LGCS_CODE,
		<if test="lgcsName!=null">
			LGCS_NAME,
		</if>
		<if test="warehouseCode!=null">
			WAREHOUSE_CODE,
		</if>
		<if test="warehouseName!=null">
			WAREHOUSE_NAME,
		</if>
		<if test="stockType!=null">
			STOCK_TYPE,
		</if>
		SL_CODE,
		<if test="slName!=null">
			SL_NAME,
		</if>
		SUPPLIER_CODE,
		<if test="supplierName!=null">
			SUPPLIER_NAME,
		</if>
		<if test="classesCode!=null">
			CLASSES_CODE,
		</if>
		<if test="classesName!=null">
			CLASSES_NAME,
		</if>
		<if test="breedCode!=null">
			BREED_CODE,
		</if>
		<if test="breedName!=null">
			BREED_NAME,
		</if>
		<if test="featureCode!=null">
			FEATURE_CODE,
		</if>
		<if test="featureName!=null">
			FEATURE_NAME,
		</if>
		<if test="normsCode!=null">
			NORMS_CODE,
		</if>
		<if test="normsName!=null">
			NORMS_NAME,
		</if>
		<if test="pdCode!=null">
			PD_CODE,
		</if>
		<if test="pdName!=null">
			PD_NAME,
		</if>
		<if test="pdLevel!=null">
			PD_LEVEL,
		</if>
		<if test="unit!=null">
			UNIT,
		</if>
		<if test="packingVolume!=null">
			PACKING_VOLUME,
		</if>
		<if test="weight!=null">
			WEIGHT,
		</if>
		<if test="volume!=null">
			VOLUME,
		</if>
		OCCUPY_QTY,
		DEL_FLG,
		CRT_ID,
		CRT_TIME,
		UPD_ID,
		UPD_TIME,
		ACT_ID,
		ACT_TIME,
		VER
		)
		SELECT
		ifnull(MAX(STOCK_ID), 0) + 1,
		#{lgcsCode},
		<if test="lgcsName!=null">
			#{lgcsName},
		</if>
		<if test="warehouseCode!=null">
			#{warehouseCode},
		</if>
		<if test="warehouseName!=null">
			#{warehouseName},
		</if>
		<if test="stockType!=null">
			#{stockType},
		</if>
		#{slCode},
		<if test="slName!=null">
			#{slName},
		</if>
		#{supplierCode},
		<if test="supplierName!=null">
			#{supplierName},
		</if>
		<if test="classesCode!=null">
			#{classesCode},
		</if>
		<if test="classesName!=null">
			#{classesName},
		</if>
		<if test="breedCode!=null">
			#{breedCode},
		</if>
		<if test="breedName!=null">
			#{breedName},
		</if>
		<if test="featureCode!=null">
			#{featureCode},
		</if>
		<if test="featureName!=null">
			#{featureName},
		</if>
		<if test="normsCode!=null">
			#{normsCode},
		</if>
		<if test="normsName!=null">
			#{normsName},
		</if>
		<if test="pdCode!=null">
			#{pdCode},
		</if>
		<if test="pdName!=null">
			#{pdName},
		</if>
		<if test="pdLevel!=null">
			#{pdLevel},
		</if>
		<if test="unit!=null">
			#{unit},
		</if>
		<if test="packingVolume!=null">
			#{packingVolume},
		</if>
		<if test="weight!=null">
			#{weight},
		</if>
		<if test="volume!=null">
			#{volume},
		</if>
		0,
		#{delFlg},
		#{crtId},
		#{crtTime},
		#{updId},
		#{updTime},
		#{actId},
		#{actTime},
		#{ver}
		FROM so_stock_occ_supp
	</insert>

	<!--检查供应商是否有库存-->
	<select id="countSoStockSupp" parameterType="BaseParam" resultType="int">
		SELECT count(1)
		FROM SO_STOCK_SP
		<include refid="whereConditionSupp"/>
	</select>


	<select id="countSuppStocked" parameterType="BaseParam" resultType="int">
		SELECT count(1)
		FROM so_stock_sp  a
		WHERE a.STOCK_QTY >= #{stockNum}
		<include refid="ConditionSupp"/>
	</select>

	<sql id="ConditionSupp">
		AND a.LGCS_CODE = LEFT(#{lgcsCode}, 2)
		AND a.SL_CODE = #{slCode}
		AND a.SUPPLIER_CODE = #{supplierCode}
		AND a.PD_CODE = #{pdCode}
	</sql>
</mapper>
