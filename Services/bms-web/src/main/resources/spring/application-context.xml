<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
    <!-- properties file -->
    <bean class="com.msk.common.interceptor.ConfigPropertyLoad" id="configPropertyLoad"/>
    <!-- properties file -->
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath*:config/*.properties</value>
            </list>
        </property>
    </bean>
	<bean id="propertyConfigurer" class="com.hoperun.plug.spring.interceptor.PropertyPlaceholderConfigurerEx">
        <property name="propertiesLoad" ref="configPropertyLoad"></property>
        <property name="needEncrypt" value="false" />
        <property name="encryptItems">
            <list>
                <value>db.url</value>
                <value>db.username</value>
                <value>db.userpwd</value>
            </list>
        </property>
        <property name="properties" ref="configProperties"/>
    </bean>
    
    <context:component-scan base-package="com.msk" use-default-filters="false">
        <context:include-filter type="regex" expression="com.msk.common.config.ConfigInfo" />
        <context:include-filter type="regex" expression="com.msk.common.config.ConfigManager" />
        <context:include-filter type="regex" expression="com.msk.*.service.*Service"/>
    </context:component-scan>
    <context:annotation-config />
    <!-- 支持异步方法执行 -->
    <task:annotation-driven/>
	
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxActive" value="${redis.maxActive}" />
        <property name="maxWait" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.pass}"/>
        <property name="poolConfig" ref="poolConfig"/>
        <property name="database" value="0"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
    </bean>
    <bean class="com.hoperun.jdbc.redis.BaseRedisDao" id="redisDao">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>
    <bean class="com.msk.common.dao.RedisExtendsUtils" id="redisExtendsUtils">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>

    <bean class="com.hoperun.plug.spring.utils.SpringContextUtil" id="springContextUtil"></bean>
</beans>
